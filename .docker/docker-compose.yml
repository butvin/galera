version: '3.3'

services:

    db:
        container_name: db
        ports:
            - "3306:3306"
        image: mariadb:10.6.4
        working_dir: /app
        networks:
            - backend
        volumes:
            - .dbdata:/var/lib/mysql
        environment:
            DATABASE_URL: mysql://root:root@localhost:3306/app_db?serverVersion=mariadb-10.6.4
            MYSQL_ROOT_PASSWORD: root
            MYSQL_USER: app
            MYSQL_PASSWORD: app
            MYSQL_DATABASE: app_db
        restart: always
        healthcheck:
            test: mysqladmin ping -h 127.0.0.1 -u root --password=root
            interval: 5s
            retries: 5
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci



    nginx:
        container_name: nginx
        ports:
            - "8080:80"
        build:
            context: .
            dockerfile: ./nginx/Dockerfile
            args:
                env: dev
        networks:
            - backend
        working_dir: /app
        volumes:
            - /var/log/nginx:/var/log/nginx/
            - php-fpm



    php-fpm:
        container_name: php-fpm
        ports:
            - "9000:9001"
        build: php-fpm
        networks:
            - backend
        working_dir: /app
        volumes:
            - ~/.composer/docker-cache/:/root/.composer:cached
            - ../:/app
        environment:
            DATABASE_TIMEZONE: UTC
            PHP_REDIS_SESSION_HOST: redis
        logging:
            driver: 'json-file'
            options:
                max-size: '1024k'
                max-file: '2'
        restart: on-failure
#        depends_on:
#            - nginx
        env_file:
            - ../.env



    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:latest
#        image: rabbitmq:3-management
        ports:
            - "15673:15674"
            - "5677:5678"
        environment:
            RABBITMQ_DEFAULT_USER: 'app'
            RABBITMQ_DEFAULT_PASS: 'app'
            RABBITMQ_DEFAULT_VHOST: '/'
        networks:
            - backend
#
        logging:
            driver: 'json-file'
            options:
                max-size: '1024k'
                max-file: '2'
#        restart: unless-stopped


    redis:
        container_name: redis
        image: bitnami/redis:latest
        environment:
            REDIS_PASSWORD: app
        networks:
            - backend
        volumes:
            - /path/to/redis-persistence:/bitnami/redis/data
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 2m15s
            timeout: 7s
            retries: 4


volumes:
    dbdata:
        external: false


networks:
    backend:
        driver: bridge
