security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

# DEFAULTS:

#security:
#    enable_authenticator_manager: true
#    password_hashers:
#        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#            algorithm: auto
#            migrate_from: {  }
#            hash_algorithm: sha512
#            key_length: 40
#            ignore_case: false
#            encode_as_base64: true
#            iterations: 5000
#            cost: null
#            memory_cost: null
#            time_cost: null
#    providers:
#        users_in_memory:
#            memory:
#                users: {  }
#    firewalls:
#        dev:
#            pattern: ^/(_(profiler|wdt)|css|images|js)/
#            security: false
#            methods: {  }
#            user_checker: security.user_checker
#            stateless: false
#            lazy: false
#            required_badges: {  }
#        main:
#            lazy: true
#            provider: users_in_memory
#            methods: {  }
#            security: true
#            user_checker: security.user_checker
#            stateless: false
#            required_badges: {  }
#    access_control: {  }
#    access_decision_manager:
#        strategy: affirmative
#        allow_if_all_abstain: false
#        allow_if_equal_granted_denied: true
#    encoders:
#        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
#            algorithm: auto
#            migrate_from: {  }
#            hash_algorithm: sha512
#            key_length: 40
#            ignore_case: false
#            encode_as_base64: true
#            iterations: 5000
#            cost: null
#            memory_cost: null
#            time_cost: null
#    access_denied_url: null
#    session_fixation_strategy: migrate
#    hide_user_not_found: true
#    always_authenticate_before_granting: false
#    erase_credentials: true
#    role_hierarchy: {  }

