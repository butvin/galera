version: '3.3'
services:

    nginx:
        container_name: nginx
        ports:
            - "80:80"
#            - "443:443"
#        extra_hosts:
#            - sun.butvin.localhost:192.168.47.12
        build:
            context: .
            dockerfile: ./nginx/Dockerfile
            args:
                env: dev
        networks:
            private_network:
        working_dir: /app
        volumes:
            - /var/log/nginx:/var/log/nginx/
            - .dbdata
#            - /etc/nginx/ssl:/etc/nginx/ssl
        env_file:
            - ../.env
        restart: always



    db:
        container_name: db
        image: mariadb:10.6.4
        ports:
            - "3306:3306"
#        image: bitnami/mariadb:latest
        working_dir: /app
        networks:
             private_network:
#                ipv4_address: 172.17.0.2
        volumes:
            - .dbdata:/var/lib/mysql
        environment:
            DATABASE_URL: "mysql://app:app@db:3306/app?serverVersion=mariadb-10.6.4"
            MYSQL_ROOT_PASSWORD: root
            ALLOW_EMPTY_PASSWORD: 'no'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
            HOSTNAME: localhost
            MYSQL_DATABASE: app
            MYSQL_PASSWORD: app
            MYSQL_USER: app
            MYSQL_PORT: 3306
            MYSQL_DRIVER: pdo_mysql
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        healthcheck:
            test: [ "CMD", "mysqladmin ping -h db -u root --password=root" ]
            interval: 15s
            timeout: 5s
            retries: 6
        restart: always



    php-fpm:
        container_name: php-fpm
        ports:
            - "9000:9001"
        build: php-fpm
        networks:
            private_network:
#                ipv4_address: 172.17.0.3
        working_dir: /app
        volumes:
            - ~/www/gallera/.docker/.dbdata:/var/lib/mysql
            - ~/.composer/docker-cache/:/root/.composer:cached
            - ../:/app
        environment:
            DATABASE_TIMEZONE: UTC
#            PHP_REDIS_SESSION_HOST: redis
        logging:
            driver: 'json-file'
            options:
                max-size: '10M'
                max-file: '2'
        restart: always
        depends_on:
            - db
            - nginx




    rabbitmq:
        container_name: rabbitmq
        image: rabbitmq:3.9.5-management
        ports:
            - "15671:15672"
            - "5671:5672"
        environment:
#            RABBITMQ_DEFAULT_USER: app
#            RABBITMQ_DEFAULT_PASS: app
            RABBITMQ_DEFAULT_VHOST: '/'
        networks:
            private_network:
#                ipv4_address: 172.17.0.9
        logging:
            driver: 'json-file'
            options:
                max-size: '1024k'
                max-file: '2'
        restart: always


    redis:
        container_name: redis
        ports:
            - "49155:6379"
        image: redis:6.2.5-alpine
        working_dir: /app
        environment:
            REDIS_PASSWORD: app
            REDIS_VERSION: 6.2.5
        networks:
            private_network:
#                ipv4_address: 172.17.0.11
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 1m45s
            timeout: 5s
            retries: 4
        restart: always


#volumes:
#    dbdata:
#        driver: local
#        external: false


networks:
    public_network:
        driver: bridge
        external: false

    private_network:
        driver: bridge
#        internal: true
#        ipam:
#            driver: default
#            config:
#                - subnet: 127.17.0.0/24


