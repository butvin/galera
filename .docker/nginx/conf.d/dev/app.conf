server {
    listen  80;
    root  /app/public;
    server_name  _;
    charset  utf-8;
#     access_log  /var/log/nginx/app.access.log;
#     error_log  /var/log/nginx/app.error.log;
#     add_header Content-Type text/plain;
    add_header 'Cache-Control' 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
    expires off;

    client_max_body_size 256M;

#     location / {
#         if (-f $request_filename) {
#             expires max;
#             break;
#         }
#     }

    location / {
        try_files $uri /index.php$args;

#         if ($request_filename !~ "\.(js|htc|ico|gif|jpg|png|css)$") {
#             rewrite ^(.*) /index.php last;
#         }

#         if ($request_method = OPTIONS) {
#             add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
#             add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
#             add_header Access-Control-Allow-Credentials true;
#             add_header Content-Length 0;
#             add_header Content-Type text/plain;
#             add_header Access-Control-Max-Age 1728000;
#             return 200;
#         }
    }

    location ~ \.php$ {
        fastcgi_pass php-fpm:9000;
        fastcgi_split_path_info  ^(.+\.php)(/.+)$;
        fastcgi_index  index.php;
        fastcgi_read_timeout 300;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param DOCUMENT_ROOT $realpath_root;
        fastcgi_param PATH_INFO $fastcgi_path_info;

        include fastcgi_params;
        internal;
    }

#     location / {
#         if ($request_method = OPTIONS) {
#             add_header Access-Control-Allow-Methods "GET, POST, PUT, PATCH, OPTIONS";
#             add_header Access-Control-Allow-Headers "Authorization, Content-Type, Accept";
#             add_header Access-Control-Allow-Credentials true;
#             add_header Content-Length 0;
#             add_header Content-Type text/plain;
#             add_header Access-Control-Max-Age 1728000;
#             return 200;
#         }
#     }

#     location ~ \.php$ {
#         set $script $uri;
#         set $path_info "";
#
#         if ($uri ~ "^(.+\.php)(/.+)") {
#             set $script $1;
#             set $path_info $2;
#         }
#
#         fastcgi_pass php-fpm:9000;
#         fastcgi_index index.php;
#
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param DOCUMENT_ROOT $document_root
#         fastcgi_param PATH_INFO $path_info;
#
#         include  fastcgi_params;
#
#         internal;
#     }

#               #worked
#     location ~ \.php$ {
#         fastcgi_split_path_info  ^(.+\.php)(/.+)$;
#         fastcgi_pass  php-fpm:9000;
#         fastcgi_read_timeout  300;
#         fastcgi_index  index.php;
#         include  fastcgi_params;
#
#         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
#         fastcgi_param PATH_INFO $fastcgi_path_info;
#
#         internal;
#     }

    ## All static files will be served directly.
#     location ~* ^.+\.(?:css|cur|js|jpe?g|gif|htc|ico|png/webp|xml|otf|ttf|eot|json|webmanifest|woff|woff2)$ {
#         access_log off;
#         expires 30d;
#         add_header Cache-Control public;
#         tcp_nodelay off;
#         open_file_cache max=3000 inactive=120s;
#         open_file_cache_valid 45s;
#         open_file_cache_min_uses 2;
#         open_file_cache_errors off;
#     }

    location = /favicon.ico {
        access_log  off;
        log_not_found  off;
    }

    location ~ \.php$ {
        return 404;
    }

    access_log /var/log/nginx/app-access.log;
    error_log /var/log/nginx/app-error.log;
}
