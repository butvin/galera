doctrine_migrations:
    # List of namespace/path pairs to search for migrations, at least one required
    migrations_paths:
#        'App\Migrations': '%kernel.project_dir%/src/App'
        # namespace is arbitrary but should be different from App\Migrations
        # as migrations classes should NOT be autoloaded
        'DoctrineMigrations': '%kernel.project_dir%/migrations'
    enable_profiler: '%kernel.debug%'
    # Run all migrations in a transaction.
    migrations: ~

    # Connection to use for the migrations
    connection: default
#    # Entity manager to use for migrations. This overrides the "connection" setting.
    em: ~
    storage:
        # Default (SQL table) metadata storage configuration
        table_storage:
            table_name: 'doctrine_migration_versions'
            version_column_name: 'version'
            version_column_length: 1024
            executed_at_column_name: 'executed_at'
    # Possible values: "BY_YEAR", "BY_YEAR_AND_MONTH", false
    organize_migrations: false
    # Path to your custom migrations template
    custom_template: ~
    # Run all migrations in a transaction.
    all_or_nothing: false
    # Adds an extra check in the generated migrations to ensure that is executed on the same database type.
    check_database_platform: true
#    services:
#        # Custom migration sorting service id
#        'Doctrine\Migrations\Version\Comparator': ~
#        # Custom migration classes factory
#        'Doctrine\Migrations\Version\MigrationFactory': 'App\Migrations\Factory\MigrationFactoryDecorator'
##        'Doctrine\Migrations\Version\MigrationFactory': ~
#    factories:
#        # Custom migration sorting service id via callables (MyCallableFactory must be a callable)
#        'Doctrine\Migrations\Version\Comparator': 'MyCallableFactory'


